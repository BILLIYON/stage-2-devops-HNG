# nginx.tmpl - templated with envsubst
worker_processes auto;
events { worker_connections 1024; }

http {
  # Fast fail detection + per-request retry behavior
  upstream backend {
    # order matters â€” primary listed first; 'backup' flag on the fallback
    # templated by ACTIVE_POOL
    # when active=blue => app_blue primary, app_green backup
    # when active=green => reverse
    ${NGINX_UPSTREAM_SERVERS}
  }

  server {
    listen 80;

    # Default client request timeout constraints (requests must complete <=10s)
    send_timeout 5s;
    client_header_timeout 5s;
    client_body_timeout 5s;

    location / {
      # Forward original Host and other headers; do not strip app headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_http_version 1.1;
      proxy_set_header Connection "";

      # Tight timeouts for fast detection
      proxy_connect_timeout 1s;
      proxy_send_timeout 3s;
      proxy_read_timeout 5s;

      # If backend errors/timeouts, try next upstream within same client request
      proxy_next_upstream error timeout http_500 http_502 http_503 http_504;
      # How many times to try a different upstream (1 retry is enough: primary -> backup)
      proxy_next_upstream_tries 2;

      # Preserve response headers from upstream (do not hide them)
      # (we must NOT use proxy_hide_header for X-App-Pool or X-Release-Id)

      proxy_pass http://backend;
    }
  }
}
